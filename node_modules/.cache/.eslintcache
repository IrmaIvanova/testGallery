[{"C:\\Irma\\teststartinggallery\\testGallery\\src\\index.js":"1","C:\\Irma\\teststartinggallery\\testGallery\\src\\App.js":"2","C:\\Irma\\teststartinggallery\\testGallery\\src\\reportWebVitals.js":"3","C:\\Irma\\teststartinggallery\\testGallery\\src\\Gallery\\Gallery.js":"4","C:\\Irma\\teststartinggallery\\testGallery\\src\\Authorisation\\Authorisation.js":"5"},{"size":517,"mtime":1619728021922,"results":"6","hashOfConfig":"7"},{"size":314,"mtime":1619728021895,"results":"8","hashOfConfig":"7"},{"size":375,"mtime":1619728021925,"results":"9","hashOfConfig":"7"},{"size":7751,"mtime":1619728021919,"results":"10","hashOfConfig":"7"},{"size":2810,"mtime":1646125093788,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"58bc3b",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},"C:\\Irma\\teststartinggallery\\testGallery\\src\\index.js",[],["26","27"],"C:\\Irma\\teststartinggallery\\testGallery\\src\\App.js",["28"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport  Gallery  from './Gallery/Gallery'\r\nimport AuthorizationForm from './Authorisation/Authorisation'\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">    \r\n    <AuthorizationForm/>\r\n    <Gallery/>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Irma\\teststartinggallery\\testGallery\\src\\reportWebVitals.js",[],"C:\\Irma\\teststartinggallery\\testGallery\\src\\Gallery\\Gallery.js",["29"],"import React from 'react'\r\nimport './Gallery.css'\r\n// массив отображаемых картинок\r\nlet img = [\r\n    { id: 1, name: \"Pic1\", desc: \"desc-pic1\", url: \"https://irmaivanova.github.io/img/rome/big1.JPG\" },\r\n    { id: 2, name: \"Pic2\", desc: \"desc-pic2\", url: \"https://irmaivanova.github.io/img/rome/big2.JPG\" },\r\n    { id: 3, name: \"Pic3\", desc: \"desc-pic3\", url: \"https://irmaivanova.github.io/img/rome/big4.JPG\" },\r\n    { id: 4, name: \"Pic4\", desc: \"desc-pic4\", url: \"https://irmaivanova.github.io/img/rome/big5.JPG\" },\r\n    { id: 5, name: \"Pic5\", desc: \"desc-pic5\", url: \"https://irmaivanova.github.io/img/rome/big11.JPG\" },\r\n    { id: 6, name: \"Pic6\", desc: \"desc-pic6\", url: \"https://irmaivanova.github.io/img/rome/big23.JPG\" },\r\n    { id: 8, name: \"Pic8\", desc: \"desc-pic8\", url: \"https://irmaivanova.github.io/img/rome/big24.JPG\" },\r\n    { id: 9, name: \"Pic9\", desc: \"desc-pic9\", url: \"https://irmaivanova.github.io/img/rome/big26.JPG\" },\r\n]\r\n// массив запаса\r\nlet moreIMG = [\r\n    { id: 10, name: \"Pic10\", desc: \"desc-pic10\", url: \"https://irmaivanova.github.io/img/rome/big27.JPG\" },\r\n    { id: 11, name: \"Pic11\", desc: \"desc-pic11\", url: \"https://irmaivanova.github.io/img/rome/big29.JPG\" },\r\n    { id: 12, name: \"Pic12\", desc: \"desc-pic12\", url: \"https://irmaivanova.github.io/img/rome/big36.JPG\" },\r\n    { id: 13, name: \"Pic13\", desc: \"desc-pic13\", url: \"https://irmaivanova.github.io/img/venice/big6.JPG\" },\r\n    { id: 14, name: \"Pic14\", desc: \"desc-pic14\", url: \"https://irmaivanova.github.io/img/venice/big7.JPG\" },\r\n    { id: 15, name: \"Pic15\", desc: \"desc-pic15\", url: \"https://irmaivanova.github.io/img/venice/big9.JPG\" },\r\n    { id: 16, name: \"Pic16\", desc: \"desc-pic16\", url: \"https://irmaivanova.github.io/img/venice/big10.JPG\" },\r\n    { id: 17, name: \"Pic17\", desc: \"desc-pic17\", url: \"https://irmaivanova.github.io/img/venice/big12.JPG\" },\r\n    { id: 18, name: \"Pic18\", desc: \"desc-pic18\", url: \"https://irmaivanova.github.io/img/venice/big13.JPG\" },\r\n    { id: 19, name: \"Pic19\", desc: \"desc-pic19\", url: \"https://irmaivanova.github.io/img/venice/big15a.JPG\" },\r\n    { id: 20, name: \"Pic20\", desc: \"desc-pic20\", url: \"https://irmaivanova.github.io/img/venice/big14.JPG\" },\r\n    { id: 21, name: \"Pic21\", desc: \"desc-pic21\", url: \"https://irmaivanova.github.io/img/venice/big16a.JPG\" },\r\n    { id: 22, name: \"Pic22\", desc: \"desc-pic22\", url: \"https://irmaivanova.github.io/img/venice/big21.JPG\" },\r\n    { id: 23, name: \"Pic23\", desc: \"desc-pic23\", url: \"https://irmaivanova.github.io/img/venice/big24.JPG\" },\r\n    { id: 24, name: \"Pic24\", desc: \"desc-pic24\", url: \"https://irmaivanova.github.io/img/venice/big23.JPG\" },\r\n    { id: 25, name: \"Pic25\", desc: \"desc-pic25\", url: \"https://irmaivanova.github.io/img/venice/big26.JPG\" },\r\n    { id: 26, name: \"Pic26\", desc: \"desc-pic26\", url: \"https://irmaivanova.github.io/img/venice/big28.JPG\" },\r\n]\r\n const Gallery = () => {\r\n    //  state массива отображаемых картинок\r\n    const [imgArr, setImgArr] = React.useState(img)\r\n    // state массива запаса\r\n    const [moreImgArr, setMoreImgArr] = React.useState(moreIMG)\r\n\r\n\r\n\r\n// функция удаления картинки из галлереи\r\n    const deleteImg = (id) => {\r\n        // получает id и методом filter проходится по нему и возвращает массив без этой катинки\r\n        setImgArr(imgArr.filter((item) => item.id !== id))\r\n        const deletedIndexe = imgArr.findIndex((el) => el.id === id)\r\n        // но так как картинку можно добавить снова, она сразу добавляется в массив картинок взапасе таким вот способом.\r\n        setMoreImgArr([...moreImgArr, imgArr[deletedIndexe]])\r\n    }\r\n\r\n    // функция для загрузки новых картинок и удаленных картинок из массива запасных.\r\n    const downloadMoreImg = () => {\r\n        if (moreImgArr.length >= 4) {\r\n            // проверяет длину массива картинок, и если она(длина) соответсвует условию больше или равно 4, то вставляет первые 4 картинки по индексу в массив отображаемых изображений\r\n            setImgArr([moreImgArr[0], moreImgArr[1], moreImgArr[2], moreImgArr[3], ...imgArr])\r\n            // и тут же удаляет добавленные картинки из массива запаса.\r\n            setMoreImgArr(moreImgArr.slice(4, moreImgArr.length))\r\n        } else if(moreImgArr.length >= 3){\r\n            // аналогично предыдущим действиям, но срабатывать должно когда объектов в массиве отсатлось не менее трех\r\n            setImgArr([moreImgArr[0], moreImgArr[1], moreImgArr[2], ...imgArr])\r\n            // удалет три первых элемента из массива\r\n            setMoreImgArr(moreImgArr.slice(3, moreImgArr.length))\r\n        }else if(moreImgArr.length >= 2){\r\n            // срабатывает, когда объектов в массиве отсатлось не менее двух\r\n            setImgArr([moreImgArr[0], moreImgArr[1], ...imgArr])\r\n            // удаляет\r\n            setMoreImgArr(moreImgArr.slice(2, moreImgArr.length))\r\n        }else if(moreImgArr.length >= 1){\r\n            // когда в массиве остался последний эллемент\r\n            setImgArr([moreImgArr[0], ...imgArr])\r\n            // удалет его из массива после добавления\r\n            setMoreImgArr(moreImgArr.slice(1, moreImgArr.length))\r\n        }\r\n        else {\r\n            // срабатывает когда массив резерва пустой\r\n            alert(\"Sorry, no more Imadges\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"Wrapper\">\r\n            <div className='Container'>\r\n                {/* массив отображаемых картинок мапается из state */}\r\n                {imgArr && imgArr.map((pic) => <div className=\"img-responsive\" key={pic.id}>\r\n                    {/* катинка */}\r\n                    <img src={pic.url} />\r\n                    {/* название картинки отображается изначально, скрывается в css при наведении */}\r\n                    <span className=\"name-txt position-rage-center\"> {pic.name}</span>\r\n                    {/* блок с именем описание и кнопкой удаления, появляеся при наведении */}\r\n                    <div className='HoverBox'>\r\n                        {/* имя */}\r\n                        <p className=\"range-txt-name \">\r\n                            {pic.name}\r\n                        </p>\r\n                        {/* описание */}\r\n                        <span className=\"range-txt-desc \">\r\n                            <strong>{pic.desc}</strong>\r\n                        </span>\r\n                        {/* кнопка удаления */}\r\n                        <button onClick={() => deleteImg(pic.id)}>DELETE</button>\r\n                    </div>\r\n                </div>\r\n                )}\r\n            </div>\r\n            {/* кнопка добавления картинок из резерва */}\r\n            <div className=\"DownloadButton\"><button onClick={() => downloadMoreImg()} className=\"DownloadButton\">DOWNLOAD</button></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Gallery;","C:\\Irma\\teststartinggallery\\testGallery\\src\\Authorisation\\Authorisation.js",["30","31","32"],"import React, { useState } from 'react';\r\nimport './Authorisation.css'\r\nimport MuiPhoneNumber from 'material-ui-phone-number';\r\nconst AuthorizationForm = () => {\r\n    // state функционального компонента пароль, логин и.... \r\n    const [password, setPassword] = useState('')\r\n    const [login, setLogin] = useState('')\r\n    // состояние скрытия компонента авторизации\r\n    const [authIsValid, setAuthIsValid] = useState(false)\r\nconst [state, setState] =useState({phone:\"\"})\r\n    // функция проверяющая соответсвие пароля установленным и меняющая state если пароль и логин введен правильно\r\n    const AuthorisationIsValid = (login, password) => {\r\n        if (login === \"irma@gmail.com\" && password === \"12345678\") {\r\n             setAuthIsValid(true)\r\n           \r\n        } else {\r\n            // сообщении об ошибке\r\n            alert(\"bad decision\")\r\n        }\r\n    }\r\n    function handleOnChange(value) {\r\n      setState({phone:value});\r\n     }\r\nconsole.log(state)\r\n    return (\r\n        <div style={{ display: authIsValid ? \"none\" : \"flex\" }} className=\"AuthForm\">\r\n            <div className=\"dws-form\">\r\n                <div className=\"Title\" htmlFor=\"tab-1\" title=\"Вкладка 1\"> Авторизация </div>\r\n                <div id=\"form-1\" className=\"tab-form\">\r\n                    {/* логин */}\r\n                    <div className=\"box-input\">\r\n                        <input className=\"input\" is aria-label=\"Введите E-mail\" role='textbox' type=\"text\" required onChange={(e) => setLogin(e.currentTarget.value)} placeholder={login} />\r\n                        <label>Введите E-mail</label>\r\n                    </div>\r\n                    {/* пароль */}\r\n                    <div className=\"box-input\">\r\n                        <input className=\"input\" aria-label=\"Введите пароль\" type=\"password\" required onChange={(e) => setPassword(e.currentTarget.value)} placeholder={password} />\r\n                        <label >Введите пароль</label>\r\n                    </div>\r\n                    <div>\r\n                    <MuiPhoneNumber  variant=\"outlined\" label=\"Phone\" className=\"InputWithMask\" inputClass autoFormat defaultCountry={'us'} onChange={handleOnChange}/>\r\n                    </div>\r\n                    {/* кнопка загрузки */}\r\n                    <a href=\"#\" className=\"button\"  onClick={() => AuthorisationIsValid(login, password)}>Войти</a>\r\n                 \r\n                    <a href=\"#\">Забыли пароль?</a>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default AuthorizationForm",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":1,"column":8,"nodeType":"39","messageId":"40","endLine":1,"endColumn":12},{"ruleId":"41","severity":1,"message":"42","line":86,"column":21,"nodeType":"43","endLine":86,"endColumn":42},{"ruleId":"44","severity":1,"message":"45","line":32,"column":25,"nodeType":"43","endLine":32,"endColumn":189},{"ruleId":"46","severity":1,"message":"47","line":44,"column":21,"nodeType":"43","endLine":44,"endColumn":107},{"ruleId":"46","severity":1,"message":"47","line":46,"column":21,"nodeType":"43","endLine":46,"endColumn":33},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/no-redundant-roles","The element input has an implicit role of textbox. Defining this explicitly is redundant and should be avoided.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]